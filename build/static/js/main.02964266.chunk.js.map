{"version":3,"sources":["components/components.js","services/services.js","App.js","index.js"],"names":["Person","name","number","handleClick","onClick","Search","text","onChange","Element","value","Form","values","addName","logName","logNumber","newName","newNumber","onSubmit","type","Notification","message","className","ErrorMsg","BASE_URL","axios","get","then","response","data","personObj","post","id","delete","newObject","put","func","timeOut","setTimeout","App","useState","persons","setPersons","setNewName","setNewNumber","filteredPersons","setFilteredPersons","notif","setNotif","error","setError","useEffect","personService","personsReturned","filterOrNot","length","event","keyword","target","toLowerCase","filtered","filter","person","Object","includes","preventDefault","identity","find","trim","window","confirm","returnedPerson","map","catch","concat","individual","deletedPerson","console","log","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02964266.chunk.js","sourcesContent":["// import react from 'react';\r\n\r\nconst Person = ({ name, number, handleClick }) => <p>{name} {number} <button onClick={handleClick}>Delete</button></p>;\r\n\r\nconst Search = ({ handleClick, text }) => <p>{text} <input onChange={handleClick} /></p>;\r\n\r\nconst Element = ({ handleClick, value}) => <div><input value={value} onChange={handleClick} /></div>\r\n\r\nconst Form = ({ handleClick, values , text}) => {\r\n\r\n    const [addName, logName, logNumber] = handleClick;\r\n    const [newName, newNumber] = values;\r\n\r\n    return (\r\n        <form onSubmit={addName}>\r\n            name: <Element handleClick={logName} value={newName} />\r\n            number: <Element handleClick={logNumber} value={newNumber} />\r\n            <div><button type=\"submit\">add</button></div>\r\n       </form>\r\nr\n}\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst ErrorMsg = ({ message }) => {\r\n\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { Person, Search, Element, Form, Notification, ErrorMsg }\r\n\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(BASE_URL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = personObj => {\r\n    const request = axios.post(BASE_URL, personObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteID = id => {\r\n    const request = axios.delete(`${BASE_URL}/${id}`)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${BASE_URL}/${id}`, newObject);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst showMessage = (func, message, timeOut) => {\r\n    func(message);\r\n    setTimeout(() => {func('')}, timeOut)\r\n}\r\n\r\nexport default { getAll, create, deleteID, update, showMessage }\r\n\r\n","import React, { useState , useEffect } from 'react'\r\n\r\n// components\r\nimport { Person, Search, Form, Notification, ErrorMsg } from \"./components/components\";\r\nimport personService from './services/services';\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ filteredPersons, setFilteredPersons ] = useState([]);\r\n  const [ notif, setNotif ] = useState('');\r\n  const [ error, setError ] = useState('');\r\n\r\n  const hook = () => {\r\n    personService\r\n      .getAll()\r\n        .then(personsReturned => {\r\n        setPersons(personsReturned)\r\n      });\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n    let identity = persons.find(person => person.name.toLowerCase() === newName.trim().toLowerCase());\r\n    if (identity) {\r\n      let choice = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`);\r\n      if (choice) {\r\n        personService\r\n          .update(identity.id, {...identity, number: newNumber})\r\n          .then(returnedPerson => {\r\n           setPersons( persons.map(person => person.name !== returnedPerson.name ? person : returnedPerson));\r\n           personService\r\n            .showMessage(setNotif,`${returnedPerson.name}'s number has been changed.` , 3000)\r\n          })\r\n          .catch(error => {\r\n            personService\r\n              .showMessage(setError, `Information of ${identity.name} has already been removed from the server`, 3000 )\r\n          })\r\n      }\r\n    } else {\r\n      let newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n      };\r\n      personService\r\n        .create(newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson));\r\n          personService\r\n            .showMessage(setNotif,`Added ${returnedPerson.name}`,3000 )\r\n        })\r\n    }\r\n    setNewName('');\r\n    setNewNumber('');\r\n\r\n\r\n  };\r\n\r\n  const deletePerson = id => {\r\n    let individual = persons.filter(person => person.id === id).map(person => person.name)[0]\r\n    let choice = window.confirm(`Delete ${individual}?`);\r\n    if (choice) {\r\n      personService\r\n        .deleteID(id)\r\n        .then(deletedPerson => {\r\n          setPersons(persons.filter(person => person.id !== id));\r\n          personService\r\n            .showMessage(setNotif, `Deleted ${individual} from the server`, 3000)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n\r\n  const logName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const logNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const filterName = (event) => {\r\n    let keyword = event.target.value.toLowerCase();\r\n    let filtered = persons.filter(person => Object.values(person)[0].toLowerCase().includes(keyword))\r\n    setFilteredPersons(filtered);\r\n  };\r\n\r\n  const filterOrNot = (filteredPersons.length === 0) ? persons : filteredPersons;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n       { notif ? <Notification message={notif} /> : (error) ? <ErrorMsg message={error} /> : ''}\r\n        <Search handleClick={filterName} text=\"filter shown with:\" />\r\n      <h1>add a new</h1>\r\n        <Form handleClick={[addName, logName, logNumber]} values={[newName, newNumber]} />\r\n      <h2>Numbers</h2>\r\n        {filterOrNot.map(person =>\r\n          <Person key={person.id} name={person.name} number={person.number} handleClick={() => deletePerson(person.id)}/>\r\n        )}\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}